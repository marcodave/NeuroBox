<?php

/*
 * kill_job
 * Created on: Jan 30, 2013 3:31:11 PM
 * 
 * Copyright 2013 EnginSoft S.p.A.
 * All rights reserved
 */
require_once 'neurocloud/lib/common.php';
require_once 'neurocloud/config.inc.php';

function do_exit($jobid, $pid, $message) {
    $redirect = isset($_GET["redirect"]);
    if ($redirect) {
        header("Location: " . OC_Helper::linkTo("neurocloud", "index.php", array("jobid" => $jobid, "pid" => $pid, "message" => $message, "action" => "kill")));
    } else {
        echo $message;
        exit();
    }
}

$study = $_GET["study"];
$jobid = $_GET["jobid"];

$jobinfo = get_job_info($study, $jobid);

if (!$jobinfo) {
    echo "ERROR: cannot find job info";
    exit();
}

#using nowdoc between single quote to avoid PHP interpreting ${...} as variable
# NOTE: FOR THIS SCRIPT TO WORK , THIS FILE MUST BE IN UNIX EOL CONVENTIONS !
# if this file is using Windows EOL CR+LF, the following bash script will fail with message
# /bin/bash^M bad interpreter
$killtree = <<<'EOD'
#!/bin/bash
#
# Bash script to kill a process tree. Code taken from 
# http://stackoverflow.com/a/3211182

killtree() {
    local _pid=$1
    local _sig=${2-TERM}
    kill -stop ${_pid} # needed to stop quickly forking parent from producing child between child killing and parent killing
    for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
        killtree ${_child} ${_sig}
    done
    /bin/kill -${_sig} ${_pid}
}

if [ $# -eq 0 -o $# -gt 2 ]; then
    echo "Usage: $(basename $0) <pid> [signal]"
    exit 1
fi

killtree $@

EOD;

$killtree_path = sprintf($NC_CONFIG["local_kill_script"],OC_User::getUser());

copy(OC::$SERVERROOT . "/apps/neurocloud/lib/killtree.sh", $killtree_path);
if (is_file($killtree_path)) {
    chmod($killtree_path, 0755);
} else {
    do_exit($jobid, null, "ERROR");
}
if (!is_executable($killtree_path)) {
    do_exit($jobid, null, "ERROR");
}
if (!isset($jobinfo["exec_type"])) {
    $jobinfo["exec_type"] = "local"; // default execution type is local execution
}
$pid = $jobinfo["pid"];
if ($pid > 0 && $jobinfo["exec_type"] === "local") {
    $ret = -1;
    $output = "";
    // uses the script killtree.sh
    exec($killtree_path . " " . $pid . " KILL", $output, $ret);
    
    if ($ret == 0) {
        $jobinfo["status"] = "KILLED";
        save_job_info($study, $jobid, $jobinfo);
        
        do_exit($jobid, $pid, "KILLED");
    } else {
        do_exit($jobid, $pid, "FINISHED");
    }
} else if ($pid > 0 && $jobinfo["exec_type"] === "remote") {
    $ret = _kill_job_remote($jobinfo);
    
    if ($ret == 0) {
        $jobinfo["status"] = "KILLED";
        save_job_info($study, $jobid, $jobinfo);
        
        do_exit($jobid, $pid, "KILLED");
    } else {
        do_exit($jobid, $pid, "FINISHED");
    }
} else {
    do_exit($jobid, $pid, "ERROR: Wrong pid " . $pid);
}
exit();
?>
